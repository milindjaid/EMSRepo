{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/create-employee/create-employee.component.html","./src/app/Components/employees/employees.component.html","./src/app/Components/login/login.component.html","./src/app/Components/sign-up/sign-up.component.html","./src/app/app.component.html","./src/app/CommonClasses/common-url.ts","./src/app/Components/create-employee/create-employee.component.css","./src/app/Components/create-employee/create-employee.component.ts","./src/app/Components/employees/employees.component.css","./src/app/Components/employees/employees.component.ts","./src/app/Components/login/login.component.css","./src/app/Components/login/login.component.ts","./src/app/Components/sign-up/sign-up.component.css","./src/app/Components/sign-up/sign-up.component.ts","./src/app/Services/common-validation.service.ts","./src/app/Services/employee.service.ts","./src/app/Services/login.service.ts","./src/app/Services/sign-up.service.ts","./src/app/Services/snack-bar.service.ts","./src/app/Services/token-interceptor.service.ts","./src/app/Services/token-management.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n<button id=\\\"close\\\" (click)=\\\"CloseEmployeePopUp()\\\" class=\\\"registerbtn\\\">Close</button>\\n\\n<form [formGroup]=\\\"employeesFormGroup\\\" class=\\\"container\\\" style=\\\"text-align: center\\\">\\n    <h2>Create Employee</h2>\\n    <label style=\\\"color: blue\\\"><b>Employee ID :</b></label>\\n      <div>\\n      <input type=\\\"text\\\" formControlName=\\\"employeeId\\\" > \\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeId.invalid && (employeesFormGroup.controls.employeeId.dirty||\\n      employeesFormGroup.controls.employeeId.touched )\\\">\\n     <div *ngIf=\\\"employeesFormGroup.controls.employeeId.errors.required\\\"  class=\\\"error_msg\\\">\\n      Employee Id is required.\\n     </div>    \\n     </div>\\n    </div>\\n    <label style=\\\"color: blue\\\"><b> First Name :</b></label>\\n    <div>\\n    <input type=\\\"text\\\" formControlName=\\\"employeefirstName\\\" >\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeefirstName.invalid && (employeesFormGroup.controls.employeefirstName.dirty||\\n      employeesFormGroup.controls.employeefirstName.touched )\\\">\\n     <div *ngIf=\\\"employeesFormGroup.controls.employeefirstName.errors.required\\\"  class=\\\"error_msg\\\">\\n      First Name  is required.\\n     </div>    \\n     </div>\\n     </div>\\n      <br>\\n      <br>\\n      <label style=\\\"color: blue\\\"><b> Last Name :</b> </label>\\n      <div>\\n      <input type=\\\"text\\\" formControlName=\\\"employeelastName\\\" >\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeelastName.invalid && (employeesFormGroup.controls.employeelastName.dirty||\\n      employeesFormGroup.controls.employeelastName.touched )\\\">\\n     <div *ngIf=\\\"employeesFormGroup.controls.employeelastName.errors.required\\\"  class=\\\"error_msg\\\">\\n      Last Name is required.\\n     </div>    \\n     </div>\\n     </div>\\n       <label style=\\\"color: blue\\\"><b> Address : </b></label>\\n       <div>\\n      <input type=\\\"text\\\" formControlName=\\\"employeeAddress\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeAddress.invalid && (employeesFormGroup.controls.employeeAddress.dirty||\\n       employeesFormGroup.controls.employeeAddress.touched )\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeAddress.errors.required\\\"  class=\\\"error_msg\\\">\\n         Address is required.\\n      </div>    \\n      </div>\\n      </div>\\n       <br>\\n       <br>\\n       <label style=\\\"color: blue\\\"><b>Date Of Birth : </b></label>\\n       <div>\\n      <input type=\\\"date\\\" formControlName=\\\"employeeDob\\\" >\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeDob.invalid && (employeesFormGroup.controls.employeeDob.dirty||\\n       employeesFormGroup.controls.employeeDob.touched )\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeDob.errors.required\\\"  class=\\\"error_msg\\\">\\n         Date Of Birth is required.\\n      </div>    \\n      </div>\\n      </div>\\n      \\n      <label style=\\\"color: blue\\\"><b>  Mobile No. :</b> </label>\\n      <div>\\n      <input type=\\\"text\\\" formControlName=\\\"employeemMobileNo\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeemMobileNo.invalid && (employeesFormGroup.controls.employeemMobileNo.dirty||\\n       employeesFormGroup.controls.employeemMobileNo.touched )\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeemMobileNo.errors.required\\\"  class=\\\"error_msg\\\">\\n         Mobile No. is required.\\n      </div>    \\n      </div>\\n      </div>\\n       <br>\\n       <br>\\n       <div style=\\\"position: relative;right: 112px;\\\">\\n      <label style=\\\"color: blue;\\\"><b>  City : </b></label>\\n      <input type=\\\"text\\\" formControlName=\\\"employeeCity\\\" >\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeCity.invalid && (employeesFormGroup.controls.employeeCity.dirty||\\n       employeesFormGroup.controls.employeeCity.touched )\\\">\\n      <div *ngIf=\\\"employeesFormGroup.controls.employeeCity.errors.required\\\"  class=\\\"error_msg\\\">\\n         City  is required.\\n      </div>    \\n      </div>\\n      </div>\\n       <br>\\n       <div>\\n      <button id=\\\"Submit\\\" (click)=\\\"SubmitEmployeeRecords(employeesFormGroup)\\\" class=\\\"registerbtn\\\">Save </button>\\n      <button id=\\\"Submit\\\" (click)=\\\"onClear()\\\" class=\\\"registerbtn\\\" style=\\\"left: 11px;\\n      position: relative;\\\">Clear </button>\\n      </div>\\n  \\n  </form>\\n\";","export default \"<button id=\\\"Logout\\\" (click)=\\\"logout()\\\" class=\\\"registerbtn logoutButton\\\">Log Out </button>\\n\\n<button id=\\\"Logout\\\" (click)=\\\"createEmployee()\\\" class=\\\"registerbtn createButton\\\" >Create Employee </button>\\n<br>\\n<br>\\n<br>\\n<hr>\\n<div>\\n<table>\\n<thead>\\n    <tr>\\n    <th>Employee ID</th>\\n    <th>First Name</th>\\n    <th>Last Name</th>\\n    <th>Address</th>\\n    <th>Date Of Birth</th>\\n    <th>Mobile No.</th>\\n    <th>City</th>\\n    </tr>\\n</thead>\\n<tbody>\\n<tr *ngFor=\\\"let employee of EmployeesList; let i=index;trackBy:trackByEmployeeId\\\">\\n<td>{{employee.employeeId}}</td>\\n<td>{{employee.employeefirstName}}</td>\\n<td>{{employee.employeelastName}}</td>\\n<td>{{employee.employeeAddress}}</td>\\n<td>{{employee.employeeDob}}</td>\\n<td>{{employee.employeemMobileNo}}</td>\\n<td>{{employee.employeeCity}}</td>\\n<td><button id=\\\"update\\\" (click)=\\\"onUpdate(employee)\\\" class=\\\"registerbtn\\\" style=\\\"height: 35px;width: 85px\\\" >Update </button></td>\\n<td><button id=\\\"delete\\\" (click)=\\\"onDelete(employee)\\\" class=\\\"registerbtn\\\" style=\\\"height: 35px;width: 85px\\\" >Delete </button></td>\\n</tr>\\n</tbody>\\n</table>\\n</div>\\n\";","export default \"<form [formGroup]=\\\"loginFormGroup\\\" style=\\\"text-align: center\\\" class=\\\"container\\\">\\n\\n    <label style=\\\"color: blue\\\"> <b> User Name:</b></label>\\n    <div>\\n    <input type=\\\"text\\\" formControlName=\\\"userName\\\" >\\n    <div *ngIf=\\\"loginFormGroup.controls.userName.invalid && (loginFormGroup.controls.userName.dirty||\\n    loginFormGroup.controls.userName.touched )\\\">\\n    <div *ngIf=\\\"loginFormGroup.controls.userName.errors.required\\\"  class=\\\"error_msg\\\">\\n                User Name is required.\\n    </div>    \\n    </div>\\n    </div>\\n    <br>\\n    <br>\\n    <label style=\\\"color: blue\\\"><b>Password: </b></label>\\n    <div>\\n    <input type=\\\"password\\\" formControlName=\\\"password\\\" >\\n    <div *ngIf=\\\"loginFormGroup.controls.password.invalid && (loginFormGroup.controls.password.dirty||\\n    loginFormGroup.controls.password.touched )\\\">\\n    <div *ngIf=\\\"loginFormGroup.controls.password.errors.required\\\" class=\\\"error_msg\\\" >\\n                Password is required.\\n    </div>    \\n    </div>\\n    </div>\\n     <br>\\n     <br>\\n     <hr style=\\\"width: 50%\\\">\\n    <button id=\\\"Submit\\\" (click)=\\\"authencateCredentials(loginFormGroup)\\\" class=\\\"registerbtn\\\">Login</button>\\n\\n    <br>\\n     Create an account? <a (click)=\\\"NavigateToSignUp()\\\" >Sign up</a>\\n</form>\\n\\n\";","export default \"<form [formGroup]=\\\"registerFormGroup\\\" class=\\\"container\\\" style=\\\"text-align: center\\\">\\n\\n    <h2>Register</h2>\\n    <p>Please fill in this form to create an account.</p>\\n    <hr style=\\\"width: 50%\\\">\\n\\n    <label style=\\\"color: blue\\\"><b>  First Name :</b>:</label>\\n    <div>\\n      <input type=\\\"text\\\" formControlName=\\\"firstName\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.firstName.invalid && (registerFormGroup.controls.firstName.dirty||\\n            registerFormGroup.controls.firstName.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.firstName.errors.required\\\"  class=\\\"error_msg\\\">\\n            First Name is required.\\n      </div>    \\n    </div>\\n    </div>\\n      <br>\\n      <br>\\n      <label style=\\\"color: blue\\\"><b> Last Name :</b> </label>\\n      <input type=\\\"password\\\" formControlName=\\\"lastName\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.lastName.invalid && (registerFormGroup.controls.lastName.dirty||\\n            registerFormGroup.controls.lastName.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.lastName.errors.required\\\"  class=\\\"error_msg\\\">\\n            Last Name is required.\\n      </div>    \\n    </div>\\n       <br>\\n       <br>\\n       <label style=\\\"color: blue\\\"><b> Password : </b></label>\\n      <input type=\\\"password\\\" formControlName=\\\"password\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.password.invalid && (registerFormGroup.controls.password.dirty||\\n            registerFormGroup.controls.password.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.password.errors.required\\\"  class=\\\"error_msg\\\">\\n            Password is required.\\n      </div>    \\n    </div>\\n       <br>\\n       <br>\\n       <label style=\\\"color: blue\\\"><b>    Email : </b></label>\\n      <input type=\\\"text\\\" formControlName=\\\"email\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.email.invalid && (registerFormGroup.controls.email.dirty||\\n            registerFormGroup.controls.email.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.email.errors.required\\\"  class=\\\"error_msg\\\">\\n            Email is required.\\n      </div>    \\n      </div>\\n       <br>\\n       <br>\\n       <label style=\\\"color: blue\\\"><b>  Address :</b> </label>\\n       <div>\\n      <input type=\\\"text\\\" formControlName=\\\"address\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.address.invalid && (registerFormGroup.controls.address.dirty||\\n            registerFormGroup.controls.address.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.address.errors.required\\\"  class=\\\"error_msg\\\">\\n            Address is required.\\n      </div>    \\n      </div>\\n      </div>\\n       <br>\\n       <br>\\n<label style=\\\"color: blue\\\"><b>   Date Of Birth : </b></label>\\n      <div>\\n      <input type=\\\"date\\\" formControlName=\\\"dob\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.dob.invalid && (registerFormGroup.controls.dob.dirty||\\n      registerFormGroup.controls.dob.touched )\\\">\\n     <div *ngIf=\\\"registerFormGroup.controls.dob.errors.required\\\"  class=\\\"error_msg\\\">\\n      Date Of Birth is required.\\n     </div>    \\n     </div>\\n     </div>\\n       <br>\\n       <br>\\n      <label style=\\\"color: blue\\\"><b>Organization Name : </b></label>\\n      <div>\\n      <input type=\\\"text\\\" formControlName=\\\"company\\\" >\\n      <div *ngIf=\\\"registerFormGroup.controls.company.invalid && (registerFormGroup.controls.company.dirty||\\n            registerFormGroup.controls.company.touched )\\\">\\n      <div *ngIf=\\\"registerFormGroup.controls.company.errors.required\\\"  class=\\\"error_msg\\\">\\n            Company is required.\\n      </div>    \\n      </div>\\n      </div>\\n       <br>\\n       <br>\\n\\n      <button id=\\\"Submit\\\" (click)=\\\"registerUserRecords(registerFormGroup)\\\" class=\\\"registerbtn\\\">Register</button>\\n  \\n      <br>\\n      <br>\\n       Already have an account? <a (click)=\\\"NavigateToLogin()\\\" style=\\\"color:green;cursor: pointer;\\\">Sign in</a>\\n  </form>\\n\\n\";","export default \"<h1 style=\\\"color: red;font-family: 'Times New Roman', Times, serif;text-align: center\\\">Employee Management System</h1>\\n<router-outlet></router-outlet>\";","export class CommonUrl {\n    private static BaseUrl:string=\"http://192.168.43.185:8080\";\n\n    public static getBaseHttpUrl()\n    {\n      return  this.BaseUrl;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY3JlYXRlLWVtcGxveWVlL2NyZWF0ZS1lbXBsb3llZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { EmployeeService } from 'src/app/Services/employee.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SnackBarService } from 'src/app/Services/snack-bar.service';\nimport { CommonValidationServiceService } from 'src/app/Services/common-validation.service';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n     employeesFormGroup:FormGroup\n\n     constructor(private formBuilder:FormBuilder,private employeeService:EmployeeService,private matDialog:MatDialog\n    ,private commonValidationService:CommonValidationServiceService,private snackBarService:SnackBarService)\n     { \n     }\n\n  ngOnInit(): void {\n\n    this.employeesFormGroup=this.commonValidationService.commonEmployeeFormGroup;\n    \n  }\n\n  SubmitEmployeeRecords(EmployeeFormGroup:FormGroup)\n  {\n    this.commonValidationService.validateWholeFormGroup(EmployeeFormGroup)\n    if(EmployeeFormGroup.valid)\n    {\n    this.matDialog.closeAll();\n   if(EmployeeFormGroup.get('empTrId').value==='')\n   {\n     this.employeeService.submitEmployeeRecord(EmployeeFormGroup.value).subscribe((flag)=>{\n     this.snackBarService.openSnackBar(flag)\n     this.commonValidationService.setStateToSubject(\"Load Employee List.\")\n     this.onClear()\n    });\n   }\n   else\n   {\n    this.employeeService.updateEmployeeRecord(EmployeeFormGroup.value).subscribe((flag)=>{\n    this.commonValidationService.setStateToSubject(\"Load Employee List.\")\n    this.snackBarService.openSnackBar(flag)\n    this.onClear()\n     });\n   }\n  }\n  }\n\n  CloseEmployeePopUp()\n  {\n    this.matDialog.closeAll();\n  }\n\n  onClear()\n  {\n    this.employeesFormGroup=this.commonValidationService.InitializeCommonFormGroup()\n  }\n\n}\n\n","export default \".createButton{\\n    float: right;\\n    position: relative;\\n    right: 265px;\\n    height: 45px;\\n    width: 143px;\\n    background-color: green\\n}\\n\\n.logoutButton{\\n    float: right;\\n    position: relative;\\n    bottom:70px;\\n    top:0px;\\n    right:15%;\\n    height: 45px;\\n    width: 100px;\\n    background-color:darkred\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9lbXBsb3llZXMvZW1wbG95ZWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaO0FBQ0o7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxPQUFPO0lBQ1AsU0FBUztJQUNULFlBQVk7SUFDWixZQUFZO0lBQ1o7QUFDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvZW1wbG95ZWVzL2VtcGxveWVlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyZWF0ZUJ1dHRvbntcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHJpZ2h0OiAyNjVweDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgd2lkdGg6IDE0M3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuXG59XG5cbi5sb2dvdXRCdXR0b257XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3R0b206NzBweDtcbiAgICB0b3A6MHB4O1xuICAgIHJpZ2h0OjE1JTtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ZGFya3JlZFxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TokenManagementService } from 'src/app/Services/token-management.service';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/Services/employee.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CreateEmployeeComponent } from '../create-employee/create-employee.component';\n//import { CommonValidationServiceService } from 'src/app/Services/common-validation-service.service';\nimport { SnackBarService } from 'src/app/Services/snack-bar.service';\nimport { CommonValidationServiceService } from 'src/app/Services/common-validation.service';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  employeesFormGroup:FormGroup\n  EmployeesList:any[]\n\n  constructor(private formBuilder:FormBuilder,private tokenService:TokenManagementService,private router:Router,\n    private employeeService:EmployeeService,private matDialog:MatDialog,private matDialogConfig:MatDialogConfig,\n    private commonValidationService:CommonValidationServiceService,private snackBarService:SnackBarService ){ \n      this.commonValidationService.getStateFromSubject().subscribe(\n        (StateChangeFlag)=>{\n          this.getAllEmployeesList();\n        }\n      )\n    }\n\n  ngOnInit(): void {\n\n    this.EmployeesList=[];\n    this.getAllEmployeesList();\n  }\n\n  logout()\n  {\n   //============Log Out===================\n   this.tokenService.clearTokenFromStorage();\n   this.router.navigateByUrl('/Login');\n\n  }\n  createEmployee()\n  {\n    let matdialogConfig=new MatDialogConfig();\n    matdialogConfig.disableClose=true;\n    matdialogConfig.autoFocus=true;\n    matdialogConfig.height='50%';\n    matdialogConfig.width='50%';\n    this.commonValidationService.setcommonEmployeeFormGroup();\n   this.matDialog.open(CreateEmployeeComponent,matdialogConfig);\n  }\n\n  getAllEmployeesList()\n  {\n    this.employeeService.getAllEmployeeRecord().subscribe(\n      (employeeList)=>{\n                        this.EmployeesList=employeeList;\n                        console.log(this.EmployeesList)\n      }\n    )\n  }\n\n  onUpdate(employeeDetails)\n  {\n    this.commonValidationService.populateForm(employeeDetails);     \n    console.log(employeeDetails)\n   //loaded Create Employee Component dynamically\n   let matdialogConfig=new MatDialogConfig();\n   matdialogConfig.disableClose=true;\n   matdialogConfig.autoFocus=true;\n   matdialogConfig.height='50%';\n   matdialogConfig.width='50%';\n   this.matDialog.open(CreateEmployeeComponent,matdialogConfig);\n    \n  }\n\n  onDelete(employeeDetails)\n  {\n    console.log(employeeDetails.empTrId)\n    this.employeeService.deleteEmployeeRecord(employeeDetails.empTrId).subscribe(\n      (Flag)=>{ \n               this.snackBarService.openSnackBar(Flag);\n              }\n    )\n  }\n\n  //=========For Performance optimization in case of delete and insert row into table=========\n  trackByEmployeeId(index:number,employee:any):string\n  {\n    return employee.employeeId;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TokenManagementService } from 'src/app/Services/token-management.service';\nimport { LoginService } from 'src/app/Services/login.service';\nimport { CommonValidationServiceService } from 'src/app/Services/common-validation.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup:FormGroup;\n\n  constructor(private formBuilder:FormBuilder,private router:Router,\n    private tokenService:TokenManagementService,private loginService:LoginService\n    ,private commonValidationService:CommonValidationServiceService)\n    {\n\n    }\n\n  ngOnInit(): void\n  {\n    \n    //====If token available then redirect to home screen to avoid multitab login======\n    if(this.tokenService.checkTokenAvailability())\n    {\n     this.router.navigateByUrl('/Home');\n    }\n    this.InitializeLoginFormGroup();\n\n  }\n\n  InitializeLoginFormGroup()\n  {\n    this.loginFormGroup=this.formBuilder.group\n    ({\n       userName:[''],\n       password:['']\n    })\n  }\n\n  authencateCredentials(formGroup:FormGroup)\n  {\n   this.commonValidationService.validateWholeFormGroup(formGroup);\n  if(formGroup.valid)\n   {\n   this.loginService.authenticateUser(formGroup.value).subscribe(\n     (value)=>{\n         if(value!==null && value!=='')\n         {\n         this.tokenService.setTokenToLocalStorage(value);\n         this.router.navigateByUrl('/Home')\n         }\n         else\n         {\n           alert(\" Please Enter Correct UserName and Password .\")\n         }\n              },\n     (error)=>{ alert(error)}\n   )\n   }\n  }\n  NavigateToSignUp()\n  {\n    this.router.navigateByUrl('/SignUp')\n  }\n}\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SignUpService } from 'src/app/Services/sign-up.service';\nimport {CommonValidationServiceService} from 'src/app/Services/common-validation.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n   registerFormGroup:FormGroup\n  constructor(private formBuilder:FormBuilder,private router:Router,private signUpService:SignUpService,\n    private commonValidationService:CommonValidationServiceService ) { }\n\n  ngOnInit(): void \n  {\n    this.InitailizeFormGroup();\n  }\n   \n  InitailizeFormGroup()\n  {\n    this.registerFormGroup=this.formBuilder.group(\n      {\n        firstName:[''],\n        lastName:[''],\n        password:[''],\n        emailAddress:[''],\n        address:[''],\n        dob:[''],\n        company:[''],\n      }\n      );\n  }\n\n  NavigateToLogin()\n  {\n   this.router.navigateByUrl('/Login');\n  }\n\n  registerUserRecords(formGroup:FormGroup)\n  {\n    this.commonValidationService.validateWholeFormGroup(formGroup);\n    if(formGroup.valid)\n    {\n    this.signUpService.registerRecords(formGroup.value).subscribe(\n     (flag)=>{\n              alert(flag)\n             }\n    );\n    }\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, FormControl, AbstractControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonValidationServiceService {\n\n  commonEmployeeFormGroup:FormGroup;\n  private subject=new Subject();\n  constructor(private formBuilder:FormBuilder)\n   {\n    this.setcommonEmployeeFormGroup();\n   }\n\n   setcommonEmployeeFormGroup()\n   {\n    this.commonEmployeeFormGroup=this.InitializeCommonFormGroup();\n   }\n\n   InitializeCommonFormGroup()\n   {\n    return this.formBuilder.group({\n          empTrId:[''],\n       employeeId:[''],\nemployeefirstName:[''],\n employeelastName:[''],\n  employeeAddress:[''],\n      employeeDob:[''],\nemployeemMobileNo:[''],\n     employeeCity:[''],\n                   })\n   }\n\n  public setStateToSubject(state:any):void\n  {\n    this.subject.next(state);\n  }\n\n  public getStateFromSubject():Observable<any>\n  {\n    return this.subject;\n  }\n\n  public populateForm(employee:any):void\n  {\n    this.commonEmployeeFormGroup.setValue(employee) \n  }\n\n  public clearFormGroup(formGroup:FormGroup):void\n  {\n    Object.keys(formGroup).forEach(formControlKey=>{\n            let formControl=formGroup.get(formControlKey);\n            formControl.setValue('');\n    })\n  }\n\n  //===========Validate Whole Form Group=================\n  public validateWholeFormGroup(formGroup:FormGroup):void\n  {\n    Object.keys(formGroup).forEach(\n      (field)=>\n      {\n        const control=formGroup.get(field);\n        if(control instanceof FormControl)\n        {\n           control.markAsDirty({onlySelf:true});\n           control.markAsDirty({onlySelf:true})\n        }\n        else if( control instanceof FormGroup)\n        {\n            this.validateWholeFormGroup(control);\n        }\n\n      }\n    )\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { CommonUrl } from '../CommonClasses/common-url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  BaseUrl=CommonUrl.getBaseHttpUrl();\n  constructor(private http:HttpClient) { }\n\n  submitEmployeeRecord(employeeDetails:any):Observable<any>\n  {\n    return this.http.post(this.BaseUrl+'/createEmployee',{employeeDetails},{responseType:'text'});\n  }\n\n  updateEmployeeRecord(employeeDetails:any):Observable<any>\n  {\n    return this.http.put(this.BaseUrl+'/updateEmployee',{employeeDetails},{responseType:'text'});\n  }\n\n  deleteEmployeeRecord(employeeId:any):Observable<any>\n  {\n    let params:HttpParams=new HttpParams().set(\"empId\",employeeId);\n    return this.http.delete(this.BaseUrl+'/deleteEmployee',{params,responseType:'text'});\n  }\n\n  getAllEmployeeRecord():Observable<any>\n  {\n    return this.http.get(this.BaseUrl+'/getAllEmployeesRecords');\n  }\n\n\t}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CommonUrl } from '../CommonClasses/common-url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  //==============Get Base Url =========\n  BaseUrl=CommonUrl.getBaseHttpUrl();\n  constructor(private http:HttpClient) { }\n\n  authenticateUser(userCredintials:any):Observable<any>\n  {\n    return this.http.post(this.BaseUrl+'/authenticate',userCredintials,{responseType:'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonUrl } from '../CommonClasses/common-url';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignUpService {\n\n   //==============Get Base Url =========\n   BaseUrl=CommonUrl.getBaseHttpUrl();\n   constructor(private http:HttpClient) { }\n\n  registerRecords(registerDetails:FormGroup):Observable<any>\n  {\n   return this.http.post(this.BaseUrl+'/register',{registerDetails},{responseType:'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarConfig,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n  MatSnackBarRef\n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarService {\n  \n  snackBarConfig: MatSnackBarConfig;\n  snackBarRef: MatSnackBarRef<any>;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  snackBarAutoHide = '1500';\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  openSnackBar(message:any) {\n\n    this.snackBarConfig = new MatSnackBarConfig();\n    this.snackBarConfig.horizontalPosition = this.horizontalPosition;\n    this.snackBarConfig.verticalPosition = this.verticalPosition;\n    this.snackBarConfig.duration = parseInt(this.snackBarAutoHide, 0);\n    this.snackBarConfig.panelClass = 'glam-snackbar';\n\n    this.snackBarRef = this.snackBar.open(message, '', this.snackBarConfig);\n}\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler,HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TokenManagementService } from './token-management.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private tokenService:TokenManagementService,private router:Router) { }\n\n  intercept(request:HttpRequest<any>,next:HttpHandler):Observable<HttpEvent<any>>\n  {\n    let modifiedRequest=this.addTokenToRequest(request);\n    console.log(modifiedRequest)\n   return next.handle(modifiedRequest).pipe(\n     //==================Error/Exception Handling Code=============\n     catchError((errorResponse:HttpErrorResponse)=>{\n       let errorMassage:any;\n       if(errorResponse.error instanceof ErrorEvent)\n       {\n        errorMassage=\"Client Side Error Occured.\"\n       }\n       else\n       {\n         //==========if token expired =================\n         if(errorResponse.status==401 || errorResponse.status==403)\n         {\n           alert(\"There was an error trying to log you in.\")\n           this.tokenService.clearTokenFromStorage();\n           this.router.navigateByUrl('/Login');\n         }\n         else if(errorResponse.status==0 && (errorResponse.url==null|| errorResponse.url!=null )) //i.e Progress Event \n         {\n          errorMassage=\"Network Error:Connection Timed Out.\"\n         }\n         else\n         {\n           console.log(errorResponse)\n          errorMassage=\"Server Side Error Occured.\"\n         }\n       }\n\n       //========return Custom error notification to Observer==========\n      return throwError (errorMassage);\n     })\n   )\n\n  }\n\n  addTokenToRequest(request:HttpRequest<any>):HttpRequest<any>\n  {\n    let token=this.tokenService.getTokenFromLocalStorage();\n    if(token)\n    {\n     return request.clone(\n      {\n        setHeaders:{\n                    'Access-Control-Allow-Origin':'*',\n                    'Authorization':`Bearer${token}`,\n                   }\n      }\n      )\n    }\n    return request;\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport {jwt_decode} from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenManagementService {\n\n  constructor() { }\n  checkTokenAvailability():boolean\n  {\n    return localStorage.getItem('UserDetails')!=null;\n  }\n\n  setTokenToLocalStorage(Token:string)\n  {\n    localStorage.setItem('UserDetails',Token);\n  }\n\n  getTokenFromLocalStorage():string\n  {\n    return localStorage.getItem('UserDetails');\n  }\n\n  getUserdetailsFromToken(token:string):any\n  {\n   return jwt_decode(token);\n  }\n\n  clearTokenFromStorage()\n  {\n    localStorage.removeItem('UserDetails');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport{LoginComponent} from \"./Components/login/login.component\";\nimport{SignUpComponent} from \"./Components/sign-up/sign-up.component\";\nimport{EmployeesComponent} from \"./Components/employees/employees.component\";\n\nconst routes: Routes = [\n  \n  { path:'',redirectTo:'Login',pathMatch:'full'},\n  { path:'Login' ,component:LoginComponent,},\n  { path:'SignUp' ,component:SignUpComponent},\n  { path:'Home' ,component:EmployeesComponent,}//canActivate:[AuthenticationGuardService]},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EmployeeManagement';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ReactiveFormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignUpComponent } from './Components/sign-up/sign-up.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { EmployeesComponent } from './Components/employees/employees.component';\nimport { TokenInterceptorService } from './Services/token-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatDialogModule, MatDialog, MatDialogConfig } from '@angular/material/dialog';\n//import { CreateEmployeeComponent } from './Components/create-employee/create-employee.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n//import { MatConfirmDialogComponent} from './Components/mat-confirm-dialog/mat-confirm-dialog.component';\nimport { from } from 'rxjs';\nimport { CreateEmployeeComponent } from './Components/create-employee/create-employee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    EmployeesComponent,\n    CreateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule, MatInputModule, MatButtonModule, MatCardModule, MatFormFieldModule,\n  ],\n  providers: [\n    MatDialog,MatDialogConfig,MatSnackBar,\n    { provide:HTTP_INTERCEPTORS,useClass:TokenInterceptorService,\n      multi:true \n    }\n  ],\n // entryComponents:[CreateEmployeeComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}